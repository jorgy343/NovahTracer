<?xml version="1.0" encoding="utf-8"?>
<xs:schema
    elementFormDefault="qualified"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- Root Element -->
  <xs:element name="Scene">
    <xs:complexType>
      <xs:all>

        <xs:element name="Camera" minOccurs="1">
          <xs:complexType>
            <xs:choice>
              <xs:element name="PerspectiveCamera" type="PerspectiveCamera" />
              <xs:element name="OrthographicCamera" type="OrthographicCamera" />
            </xs:choice>
          </xs:complexType>
        </xs:element>

        <xs:element name="Materials" minOccurs="0">
          <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="BasicMaterial" type="BasicMaterial" />
              <xs:element name="LuaMaterial" type="LuaMaterial" />
            </xs:choice>
          </xs:complexType>
        </xs:element>

        <xs:element name="Lights" minOccurs="0">
          <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="PointLight" type="PointLight" />
              <xs:element name="DirectionalLight" type="DirectionalLight" />
            </xs:choice>
          </xs:complexType>
        </xs:element>

        <xs:element name="RootSurface" minOccurs="1">
          <xs:complexType>
            <xs:group ref="GroupOfSurfaces" minOccurs="0" maxOccurs="1" />
          </xs:complexType>
        </xs:element>

      </xs:all>
      
      <xs:attribute name="BackgroundColor" type="Color3" use="required" />
      <xs:attribute name="DefaultRefractionIndex" type="xs:float" use="required" />
      <xs:attribute name="AntialiasingLevel" type="xs:integer" use="required" />
      
    </xs:complexType>
  </xs:element>

  <!-- Basic Types -->
  <xs:simpleType name="Color3">
    <xs:restriction base="xs:string">
      <xs:pattern value="\s*([+-]?[0-9]+\.?[0-9]*)\s*,\s*([+-]?[0-9]+\.?[0-9]*)\s*,\s*([+-]?[0-9]+\.?[0-9]*)\s*" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Vector3">
    <xs:restriction base="xs:string">
      <xs:pattern value="\s*([+-]?[0-9]+\.?[0-9]*)\s*,\s*([+-]?[0-9]+\.?[0-9]*)\s*,\s*([+-]?[0-9]+\.?[0-9]*)\s*" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Vector4">
    <xs:restriction base="xs:string">
      <xs:pattern value="\s*([+-]?[0-9]+\.?[0-9]*)\s*,\s*([+-]?[0-9]+\.?[0-9]*)\s*,\s*([+-]?[0-9]+\.?[0-9]*)\s*,\s*([+-]?[0-9]+\.?[0-9]*)\s*" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Name">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z_][a-zA-Z0-9_]*" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="MatrixStack">
    <xs:choice minOccurs="1" maxOccurs="unbounded">

      <xs:element name="ScaleMatrix">
        <xs:complexType>
          <xs:attribute name="Scale" type="Vector3" />
        </xs:complexType>
      </xs:element>

      <xs:element name="TranslationMatrix">
        <xs:complexType>
          <xs:attribute name="Translation" type="Vector3" />
        </xs:complexType>
      </xs:element>

    </xs:choice>
  </xs:complexType>

  <!-- Cameras -->
  <xs:complexType name="PerspectiveCamera">
    <xs:attribute name="Position" type="Vector3" use="required" />
    <xs:attribute name="LookAt" type="Vector3" use="required" />
    <xs:attribute name="Up" type="Vector3" use="required" />
    <xs:attribute name="ScreenWidth" type="xs:int" use="required" />
    <xs:attribute name="ScreenHeight" type="xs:int" use="required" />
    <xs:attribute name="FieldOfView" type="xs:float" use="required" />
  </xs:complexType>

  <xs:complexType name="OrthographicCamera">
    <xs:attribute name="Position" type="Vector3" use="required" />
    <xs:attribute name="LookAt" type="Vector3" use="required" />
    <xs:attribute name="Up" type="Vector3" use="required" />
    <xs:attribute name="ScreenWidth" type="xs:int" use="required" />
    <xs:attribute name="ScreenHeight" type="xs:int" use="required" />
    <xs:attribute name="OrthoWidth" type="xs:float" use="required" />
    <xs:attribute name="OrthoHeight" type="xs:float" use="required" />
  </xs:complexType>

  <!-- Materials -->
  <xs:group name="GroupOfMaterials">
    <xs:choice>
      <xs:element name="BasicMaterial" type="BasicMaterial" />
      <xs:element name="LuaMaterial" type="LuaMaterial" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="MaterialBase">
    <xs:attribute name="Name" type="Name" />
    <xs:attribute name="AmbientCoefficient" type="xs:float" />
    <xs:attribute name="DiffuseCoefficient" type="xs:float" />
    <xs:attribute name="SpecularCoefficient" type="xs:float" />
    <xs:attribute name="ReflectionCoefficient" type="xs:float" />
    <xs:attribute name="RefractionCoefficient" type="xs:float" />
    <xs:attribute name="SpecularPower" type="xs:float" />
    <xs:attribute name="RefractionIndex" type="xs:float" />
    <xs:attribute name="LightOccluder" type="xs:boolean" />
    <xs:attribute name="ShadowReceiver" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="BasicMaterial">
    <xs:complexContent>
      <xs:extension base="MaterialBase">
        <xs:attribute name="Color" type="Color3" />
        <xs:attribute name="SpecularColor" type="Color3" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LuaMaterial">
    <xs:complexContent>
      <xs:extension base="MaterialBase">
        <xs:choice>
          <xs:element name="LuaCode" type="xs:string" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Lights -->
  <xs:complexType name="Light" abstract="true">
    <xs:attribute name="Name" type="Name" />
  </xs:complexType>

  <xs:complexType name="PointLight">
    <xs:complexContent>
      <xs:extension base="Light">
        <xs:attribute name="Color" type="Color3" use="required" />
        <xs:attribute name="Position" type="Vector3" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DirectionalLight">
    <xs:complexContent>
      <xs:extension base="Light">
        <xs:attribute name="Direction" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Surfaces -->
  <xs:group name="GroupOfSurfaces">
    <xs:choice>
      <xs:element name="SurfaceGroup" type="SurfaceGroup" />
      <xs:element name="Csg" type="Csg" />
      <xs:element name="TransformedSurface" type="TransformedSurface" />
      <xs:element name="Plane" type="Plane" />
      <xs:element name="Sphere" type="Sphere" />
      <xs:element name="SphereSoa8" type="SphereSoa8" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="SurfaceGroup">
    <xs:all>
      <xs:element name="Material" minOccurs="0">
        <xs:complexType>
          <xs:group ref="GroupOfMaterials" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Surfaces" minOccurs="0">
        <xs:complexType>
          <xs:group ref="GroupOfSurfaces" maxOccurs="unbounded" />
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="Name" />
    <xs:attribute name="Material" type="Name" />
  </xs:complexType>

  <xs:complexType name="Csg">
    <xs:all>
      <xs:element name="Material" minOccurs="0">
        <xs:complexType>
          <xs:group ref="GroupOfMaterials" />
        </xs:complexType>
      </xs:element>
      <xs:element name="LeftSurface">
        <xs:complexType>
          <xs:group ref="GroupOfSurfaces" />
        </xs:complexType>
      </xs:element>
      <xs:element name="RightSurface">
        <xs:complexType>
          <xs:group ref="GroupOfSurfaces" />
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="Name" />
    <xs:attribute name="Material" type="Name" />
    <xs:attribute name="Operation">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Union" />
          <xs:enumeration value="Intersection" />
          <xs:enumeration value="Difference" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TransformedSurface">
    <xs:all>
      <xs:element name="Material" minOccurs="0">
        <xs:complexType>
          <xs:group ref="GroupOfMaterials" />
        </xs:complexType>
      </xs:element>
      <xs:element name="MatrixStack" type="MatrixStack" />
      <xs:element name="Surface">
        <xs:complexType>
          <xs:group ref="GroupOfSurfaces" />
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="Name" />
    <xs:attribute name="Material" type="Name" />
  </xs:complexType>

  <xs:complexType name="Plane">
    <xs:all>
      <xs:element name="Material" minOccurs="0">
        <xs:complexType>
          <xs:group ref="GroupOfMaterials" />
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="Name" />
    <xs:attribute name="Material" type="Name" />
    <xs:attribute name="Normal" type="Vector3" />
    <xs:attribute name="Point" type="Vector3" />
  </xs:complexType>

  <xs:complexType name="Sphere">
    <xs:all>
      <xs:element name="Material" minOccurs="0">
        <xs:complexType>
          <xs:group ref="GroupOfMaterials" />
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="Name" />
    <xs:attribute name="Material" type="Name" />
    <xs:attribute name="Center" type="Vector3" />
    <xs:attribute name="Radius" type="xs:float" />
  </xs:complexType>

  <xs:complexType name="SphereSoa8">
    <xs:all>
      <xs:element name="Spheres" minOccurs="1">
        <xs:complexType>
          <xs:choice minOccurs="8" maxOccurs="8">
            <xs:element name="Sphere" type="Sphere" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="Name" />
  </xs:complexType>

</xs:schema>